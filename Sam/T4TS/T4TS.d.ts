/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

declare module App {
    /** Generated from Sam.DbContext.ApprovalLevel **/
    const enum ApprovalLevel {
        Nobody = 0,
        Manager = 1,
        Building = 2,
        Area = 3,
        Door = 4,
    }
    /** Generated from Sam.DbContext.ApprovalStatus **/
    const enum ApprovalStatus {
        WaitingForApproval = 0,
        Approved = 1,
        Rejected = 2,
    }
    /** Generated from Sam.DbContext.AssignmentType **/
    const enum AssignmentType {
        Special = 0,
        Standard = 1,
    }
    /** Generated from Sam.DbContext.CardStatus **/
    const enum CardStatus {
        Active = 0,
        Inactive = 1,
        Lost = 2,
    }
    /** Generated from Sam.DbContext.CardType **/
    const enum CardType {
        Internal = 0,
        Guest = 1,
        External = 2,
        Replacement = 3,
    }
    /** Generated from Sam.DbContext.EmployeeStatus **/
    const enum EmployeeStatus {
        New = 0,
        Normal = 1,
        Resigned = 2,
    }
    /** Generated from Sam.DbContext.UserRole **/
    const enum UserRole {
        Undefined = 0,
        Normal = 1,
        BuildingOwner = 2,
        AreaOwner = 4,
        DoorOwner = 8,
        Manager = 16,
        Admin = 32,
    }
    /** Generated from Sam.DbContext.Card **/
    export interface ICard extends App.IEntityObjectBaseId {
        Number?: number;
        ActivationCode?: string;
        Status?: App.CardStatus;
        CardType?: App.CardType;
        CustomerId: string;
        Customer?: App.ICustomer;
        DateExpiration?: Date | moment.Moment | string;
        Employees?: App.IEmployee[];
        Employee: App.IEmployee;
    }
    /** Generated from Sam.DbContext.CardAccess **/
    export interface ICardAccess extends App.IEntityObjectBaseId {
        CardId: string;
        Card: App.ICard;
        DoorId: string;
        Door: App.IDoor;
        ApprovedById: string;
        ApprovedBy: App.IEmployee;
        ApprovedDate?: Date | moment.Moment | string;
        ApprovalLevel: App.ApprovalLevel;
        ApprovalStatus: App.ApprovalStatus;
        Note: string;
        AssignmentType: App.AssignmentType;
    }
    /** Generated from Sam.DbContext.EntityObjectId<TKey> **/
    export interface IEntityObjectBaseId {
        Id: any;
        CreatedDate: Date | moment.Moment | string;
        CreatedById: string;
        CreatedBy: any;
        ModifiedDate: Date | moment.Moment | string;
        ModifiedById: string;
        ModifiedBy: any;
    }
    /** Generated from Sam.DbContext.EntityObjectId **/
    export interface IEntityObjectId extends App.IEntityObjectBaseId {
    }
    /** Generated from Sam.DbContext.Company **/
    export interface ICompany extends App.IEntityObjectBaseId {
        Name: string;
        ZipCode: string;
        Address1: string;
        Address2: string;
        CustomerId: string;
        Customer: App.ICustomer;
    }
    /** Generated from Sam.DbContext.Customer **/
    export interface ICustomer extends App.IEntityObjectBaseId {
        Name: string;
    }
    /** Generated from Sam.DbContext.Department **/
    export interface IDepartment extends App.IEntityObjectBaseId {
        Name: string;
        CompanyId: string;
        Company: App.ICompany;
    }
    /** Generated from Sam.DbContext.DepartmentList **/
    export interface IDepartmentList extends App.IEntityObjectBaseId {
        Name: string;
        DepartmentId: string;
        Department: App.IDepartment;
        ApprovedById: string;
        ApprovedBy: App.IEmployee;
        ApprovedDate?: Date | moment.Moment | string;
        DoorLists: App.IDoorList[];
    }
    /** Generated from Sam.DbContext.Area **/
    export interface IArea extends App.IEntityObjectBaseId {
        Name: string;
        BuildingId: string;
        Building: App.IBuilding;
        OwnerId: string;
        Owner: App.IEmployee;
    }
    /** Generated from Sam.DbContext.Building **/
    export interface IBuilding extends App.IEntityObjectBaseId {
        Name: string;
        Address1: string;
        Address2: string;
        CityId: string;
        City: App.ICity;
        CustomerId: string;
        Customer: App.ICustomer;
        OwnerId: string;
        Owner: App.IEmployee;
    }
    /** Generated from Sam.DbContext.City **/
    export interface ICity extends App.IEntityObjectBaseId {
        Name: string;
        ZipCode: string;
        CountryId: string;
        Country: App.ICountry;
    }
    /** Generated from Sam.DbContext.Country **/
    export interface ICountry extends App.IEntityObjectBaseId {
        Name: string;
    }
    /** Generated from Sam.DbContext.Door **/
    export interface IDoor extends App.IEntityObjectBaseId {
        Name: string;
        AreaId: string;
        Area: App.IArea;
        OwnerId: string;
        Owner: App.IEmployee;
        DoorLists: App.IDoorList[];
        ApprovalLevel: App.ApprovalLevel;
        PreApproved: boolean;
    }
    /** Generated from Sam.DbContext.DoorList **/
    export interface IDoorList extends App.IEntityObjectBaseId {
        Name: string;
        CustomerId: string;
        Customer: App.ICustomer;
        Doors: App.IDoor[];
        DepartmentLists: App.IDepartmentList[];
    }
    /** Generated from Sam.DbContext.Employee **/
    export interface IEmployee extends App.IEntityObjectBaseId {
        Name: string;
        Email: string;
        PinCode?: number;
        Status: App.EmployeeStatus;
        Image: string;
        UserRole: App.UserRole;
        DepartmentId: string;
        Department: App.IDepartment;
        ManagerId: string;
        Manager: App.IEmployee;
        Employees: App.IEmployee[];
        CardId: string;
        Card: App.ICard;
        UserId?: string;
        User: any;
        CanApplyAnothersAccess: boolean;
        DelegateToId: string;
        DelegateTo: App.IEmployee;
        Delegaters: App.IEmployee[];
        DelegateFromDate?: Date | moment.Moment | string;
        DelegateToDate?: Date | moment.Moment | string;
    }
    /** Generated from Sam.DbContext.EmployeeCard **/
    export interface IEmployeeCard extends App.IEntityObjectBaseId {
        CardId: string;
        Card: App.ICard;
        EmployeeId: string;
        Employee: App.IEmployee;
    }
    /** Generated from Sam.DbContext.TypeScriptUser **/
    export interface IUser {
        Id: string;
        UserName?: string;
        PasswordHash?: string;
        Email?: string;
        Employee?: App.IEmployee;
        Name?: string;
    }
}
